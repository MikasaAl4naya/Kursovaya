//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication7.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OlegEntities : DbContext
    {
        public OlegEntities()
            : base("name=OlegEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Faculty> Faculties { get; set; }
        public virtual DbSet<Group_2> Group_2 { get; set; }
        public virtual DbSet<Specialty> Specialties { get; set; }
        public virtual DbSet<Student> Students { get; set; }
    
        public virtual int addFaculty(string title, string dean_FN)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var dean_FNParameter = dean_FN != null ?
                new ObjectParameter("Dean_FN", dean_FN) :
                new ObjectParameter("Dean_FN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addFaculty", titleParameter, dean_FNParameter);
        }
    
        public virtual int addGroup(string cipher, string specialty_Title, Nullable<short> year_of_receipt)
        {
            var cipherParameter = cipher != null ?
                new ObjectParameter("Cipher", cipher) :
                new ObjectParameter("Cipher", typeof(string));
    
            var specialty_TitleParameter = specialty_Title != null ?
                new ObjectParameter("Specialty_Title", specialty_Title) :
                new ObjectParameter("Specialty_Title", typeof(string));
    
            var year_of_receiptParameter = year_of_receipt.HasValue ?
                new ObjectParameter("Year_of_receipt", year_of_receipt) :
                new ObjectParameter("Year_of_receipt", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addGroup", cipherParameter, specialty_TitleParameter, year_of_receiptParameter);
        }
    
        public virtual int addSpeciality(string title, string faculty_Title, string cipher, string qualification)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var faculty_TitleParameter = faculty_Title != null ?
                new ObjectParameter("Faculty_Title", faculty_Title) :
                new ObjectParameter("Faculty_Title", typeof(string));
    
            var cipherParameter = cipher != null ?
                new ObjectParameter("Cipher", cipher) :
                new ObjectParameter("Cipher", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("Qualification", qualification) :
                new ObjectParameter("Qualification", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addSpeciality", titleParameter, faculty_TitleParameter, cipherParameter, qualificationParameter);
        }
    
        public virtual int addStudent(Nullable<int> recordBook, string groupCipher, Nullable<int> fatherSalary, Nullable<int> motherSalary, string fullName, Nullable<byte> family)
        {
            var recordBookParameter = recordBook.HasValue ?
                new ObjectParameter("RecordBook", recordBook) :
                new ObjectParameter("RecordBook", typeof(int));
    
            var groupCipherParameter = groupCipher != null ?
                new ObjectParameter("GroupCipher", groupCipher) :
                new ObjectParameter("GroupCipher", typeof(string));
    
            var fatherSalaryParameter = fatherSalary.HasValue ?
                new ObjectParameter("FatherSalary", fatherSalary) :
                new ObjectParameter("FatherSalary", typeof(int));
    
            var motherSalaryParameter = motherSalary.HasValue ?
                new ObjectParameter("MotherSalary", motherSalary) :
                new ObjectParameter("MotherSalary", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var familyParameter = family.HasValue ?
                new ObjectParameter("Family", family) :
                new ObjectParameter("Family", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addStudent", recordBookParameter, groupCipherParameter, fatherSalaryParameter, motherSalaryParameter, fullNameParameter, familyParameter);
        }
    
        public virtual int createAbb(string s, string a)
        {
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            var aParameter = a != null ?
                new ObjectParameter("a", a) :
                new ObjectParameter("a", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createAbb", sParameter, aParameter);
        }
    
        public virtual int DeleteFaculty(string title)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFaculty", titleParameter);
        }
    
        public virtual int DeleteGroup(string cipher)
        {
            var cipherParameter = cipher != null ?
                new ObjectParameter("Cipher", cipher) :
                new ObjectParameter("Cipher", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteGroup", cipherParameter);
        }
    
        public virtual int DeleteSpeciality(string title)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSpeciality", titleParameter);
        }
    
        public virtual int DeleteStudent(Nullable<int> recordBook)
        {
            var recordBookParameter = recordBook.HasValue ?
                new ObjectParameter("RecordBook", recordBook) :
                new ObjectParameter("RecordBook", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStudent", recordBookParameter);
        }
    
        public virtual ObjectResult<FIRST_Result> FIRST(Nullable<int> number, string group)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var groupParameter = group != null ?
                new ObjectParameter("group", group) :
                new ObjectParameter("group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FIRST_Result>("FIRST", numberParameter, groupParameter);
        }
    
        public virtual ObjectResult<SeconD2_Result> SeconD2(Nullable<short> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeconD2_Result>("SeconD2", yearParameter);
        }
    
        public virtual ObjectResult<SelectFaculty_Result> SelectFaculty(string title)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectFaculty_Result>("SelectFaculty", titleParameter);
        }
    
        public virtual ObjectResult<SelectGroup_Result> SelectGroup(string cipher)
        {
            var cipherParameter = cipher != null ?
                new ObjectParameter("Cipher", cipher) :
                new ObjectParameter("Cipher", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectGroup_Result>("SelectGroup", cipherParameter);
        }
    
        public virtual ObjectResult<SelectSpecialty_Result> SelectSpecialty(string title)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectSpecialty_Result>("SelectSpecialty", titleParameter);
        }
    
        public virtual ObjectResult<SelectStudent_Result> SelectStudent(Nullable<int> recordBook)
        {
            var recordBookParameter = recordBook.HasValue ?
                new ObjectParameter("RecordBook", recordBook) :
                new ObjectParameter("RecordBook", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStudent_Result>("SelectStudent", recordBookParameter);
        }
    
        public virtual ObjectResult<updateFaculty_Result> updateFaculty(string title, string newTitle, string dean_FN)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var newTitleParameter = newTitle != null ?
                new ObjectParameter("NewTitle", newTitle) :
                new ObjectParameter("NewTitle", typeof(string));
    
            var dean_FNParameter = dean_FN != null ?
                new ObjectParameter("Dean_FN", dean_FN) :
                new ObjectParameter("Dean_FN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<updateFaculty_Result>("updateFaculty", titleParameter, newTitleParameter, dean_FNParameter);
        }
    
        public virtual int updateGroup(string specialty_Title, string cipher, Nullable<short> year_of_receipt, string newCipher)
        {
            var specialty_TitleParameter = specialty_Title != null ?
                new ObjectParameter("Specialty_Title", specialty_Title) :
                new ObjectParameter("Specialty_Title", typeof(string));
    
            var cipherParameter = cipher != null ?
                new ObjectParameter("Cipher", cipher) :
                new ObjectParameter("Cipher", typeof(string));
    
            var year_of_receiptParameter = year_of_receipt.HasValue ?
                new ObjectParameter("Year_of_receipt", year_of_receipt) :
                new ObjectParameter("Year_of_receipt", typeof(short));
    
            var newCipherParameter = newCipher != null ?
                new ObjectParameter("NewCipher", newCipher) :
                new ObjectParameter("NewCipher", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateGroup", specialty_TitleParameter, cipherParameter, year_of_receiptParameter, newCipherParameter);
        }
    
        public virtual ObjectResult<updateSpecialty_Result> updateSpecialty(string title, string faculty_Title, string cipher, string qualification, string newTitle)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var faculty_TitleParameter = faculty_Title != null ?
                new ObjectParameter("Faculty_Title", faculty_Title) :
                new ObjectParameter("Faculty_Title", typeof(string));
    
            var cipherParameter = cipher != null ?
                new ObjectParameter("Cipher", cipher) :
                new ObjectParameter("Cipher", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("Qualification", qualification) :
                new ObjectParameter("Qualification", typeof(string));
    
            var newTitleParameter = newTitle != null ?
                new ObjectParameter("NewTitle", newTitle) :
                new ObjectParameter("NewTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<updateSpecialty_Result>("updateSpecialty", titleParameter, faculty_TitleParameter, cipherParameter, qualificationParameter, newTitleParameter);
        }
    
        public virtual ObjectResult<updateStudent_Result> updateStudent(Nullable<int> recordBook, string groupCipher, Nullable<int> fatherSalary, Nullable<int> motherSalary, string fullName, Nullable<byte> family, Nullable<int> newRecordBook)
        {
            var recordBookParameter = recordBook.HasValue ?
                new ObjectParameter("RecordBook", recordBook) :
                new ObjectParameter("RecordBook", typeof(int));
    
            var groupCipherParameter = groupCipher != null ?
                new ObjectParameter("GroupCipher", groupCipher) :
                new ObjectParameter("GroupCipher", typeof(string));
    
            var fatherSalaryParameter = fatherSalary.HasValue ?
                new ObjectParameter("FatherSalary", fatherSalary) :
                new ObjectParameter("FatherSalary", typeof(int));
    
            var motherSalaryParameter = motherSalary.HasValue ?
                new ObjectParameter("MotherSalary", motherSalary) :
                new ObjectParameter("MotherSalary", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var familyParameter = family.HasValue ?
                new ObjectParameter("Family", family) :
                new ObjectParameter("Family", typeof(byte));
    
            var newRecordBookParameter = newRecordBook.HasValue ?
                new ObjectParameter("NewRecordBook", newRecordBook) :
                new ObjectParameter("NewRecordBook", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<updateStudent_Result>("updateStudent", recordBookParameter, groupCipherParameter, fatherSalaryParameter, motherSalaryParameter, fullNameParameter, familyParameter, newRecordBookParameter);
        }
    
        public virtual ObjectResult<SeconD_Result> SeconD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeconD_Result>("SeconD");
        }
    }
}
